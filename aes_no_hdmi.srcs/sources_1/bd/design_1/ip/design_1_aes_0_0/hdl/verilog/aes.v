// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="aes,hls_ip_2014_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module aes (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        AXI_DMA_SLAVE_req_din,
        AXI_DMA_SLAVE_req_full_n,
        AXI_DMA_SLAVE_req_write,
        AXI_DMA_SLAVE_rsp_empty_n,
        AXI_DMA_SLAVE_rsp_read,
        AXI_DMA_SLAVE_address,
        AXI_DMA_SLAVE_datain,
        AXI_DMA_SLAVE_dataout,
        AXI_DMA_SLAVE_size,
        sourceAddress,
        key_in_V,
        destinationAddress,
        length_r,
        s_data_in_V_address0,
        s_data_in_V_ce0,
        s_data_in_V_q0,
        s_encrypted_out_V_address1,
        s_encrypted_out_V_ce1,
        s_encrypted_out_V_we1,
        s_encrypted_out_V_d1,
        read_finished_interrupt_V,
        write_finished_interrupt_V,
        enable_i,
        enable_o,
        finished,
        bram_input_address,
        bram_output_address
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b000000;
parameter    ap_ST_st2_fsm_1 = 6'b1;
parameter    ap_ST_st3_fsm_2 = 6'b10;
parameter    ap_ST_st4_fsm_3 = 6'b11;
parameter    ap_ST_st5_fsm_4 = 6'b100;
parameter    ap_ST_st6_fsm_5 = 6'b101;
parameter    ap_ST_st7_fsm_6 = 6'b110;
parameter    ap_ST_st8_fsm_7 = 6'b111;
parameter    ap_ST_st9_fsm_8 = 6'b1000;
parameter    ap_ST_st10_fsm_9 = 6'b1001;
parameter    ap_ST_st11_fsm_10 = 6'b1010;
parameter    ap_ST_st12_fsm_11 = 6'b1011;
parameter    ap_ST_st13_fsm_12 = 6'b1100;
parameter    ap_ST_st14_fsm_13 = 6'b1101;
parameter    ap_ST_st15_fsm_14 = 6'b1110;
parameter    ap_ST_st16_fsm_15 = 6'b1111;
parameter    ap_ST_st17_fsm_16 = 6'b10000;
parameter    ap_ST_st18_fsm_17 = 6'b10001;
parameter    ap_ST_st19_fsm_18 = 6'b10010;
parameter    ap_ST_st20_fsm_19 = 6'b10011;
parameter    ap_ST_st21_fsm_20 = 6'b10100;
parameter    ap_ST_st22_fsm_21 = 6'b10101;
parameter    ap_ST_st23_fsm_22 = 6'b10110;
parameter    ap_ST_st24_fsm_23 = 6'b10111;
parameter    ap_ST_st25_fsm_24 = 6'b11000;
parameter    ap_ST_st26_fsm_25 = 6'b11001;
parameter    ap_ST_st27_fsm_26 = 6'b11010;
parameter    ap_ST_st28_fsm_27 = 6'b11011;
parameter    ap_ST_st29_fsm_28 = 6'b11100;
parameter    ap_ST_st30_fsm_29 = 6'b11101;
parameter    ap_ST_st31_fsm_30 = 6'b11110;
parameter    ap_ST_st32_fsm_31 = 6'b11111;
parameter    ap_ST_st33_fsm_32 = 6'b100000;
parameter    ap_ST_st34_fsm_33 = 6'b100001;
parameter    ap_ST_st35_fsm_34 = 6'b100010;
parameter    ap_ST_st36_fsm_35 = 6'b100011;
parameter    ap_ST_st37_fsm_36 = 6'b100100;
parameter    ap_ST_st38_fsm_37 = 6'b100101;
parameter    ap_ST_st39_fsm_38 = 6'b100110;
parameter    ap_ST_st40_fsm_39 = 6'b100111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv64_8 = 64'b1000;
parameter    ap_const_lv64_A = 64'b1010;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   AXI_DMA_SLAVE_req_din;
input   AXI_DMA_SLAVE_req_full_n;
output   AXI_DMA_SLAVE_req_write;
input   AXI_DMA_SLAVE_rsp_empty_n;
output   AXI_DMA_SLAVE_rsp_read;
output  [31:0] AXI_DMA_SLAVE_address;
input  [31:0] AXI_DMA_SLAVE_datain;
output  [31:0] AXI_DMA_SLAVE_dataout;
output  [31:0] AXI_DMA_SLAVE_size;
input  [31:0] sourceAddress;
input  [127:0] key_in_V;
input  [31:0] destinationAddress;
input  [31:0] length_r;
output  [0:0] s_data_in_V_address0;
output   s_data_in_V_ce0;
input  [127:0] s_data_in_V_q0;
output  [0:0] s_encrypted_out_V_address1;
output   s_encrypted_out_V_ce1;
output   s_encrypted_out_V_we1;
output  [127:0] s_encrypted_out_V_d1;
input  [0:0] read_finished_interrupt_V;
input  [0:0] write_finished_interrupt_V;
input   enable_i;
output   enable_o;
output   finished;
input  [31:0] bram_input_address;
input  [31:0] bram_output_address;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg AXI_DMA_SLAVE_req_din;
reg AXI_DMA_SLAVE_req_write;
reg AXI_DMA_SLAVE_rsp_read;
reg[31:0] AXI_DMA_SLAVE_address;
reg[31:0] AXI_DMA_SLAVE_dataout;
reg s_data_in_V_ce0;
reg s_encrypted_out_V_ce1;
reg s_encrypted_out_V_we1;
reg enable_o;
reg finished;
reg   [5:0] ap_CS_fsm = 6'b000000;
reg   [18:0] reg_316;
wire   [0:0] local_enable_read_fu_174_p2;
reg   [0:0] local_enable_reg_436;
wire   [31:0] AXI_DMA_SLAVE_addr_fu_320_p2;
reg   [31:0] AXI_DMA_SLAVE_addr_reg_440;
wire   [31:0] AXI_DMA_SLAVE_addr_1_fu_326_p2;
reg   [31:0] AXI_DMA_SLAVE_addr_1_reg_445;
wire   [31:0] AXI_DMA_SLAVE_addr_2_fu_332_p2;
reg   [31:0] AXI_DMA_SLAVE_addr_2_reg_450;
wire   [31:0] AXI_DMA_SLAVE_addr_3_fu_338_p2;
reg   [31:0] AXI_DMA_SLAVE_addr_3_reg_455;
wire   [31:0] i_1_fu_349_p2;
reg   [31:0] i_1_reg_464;
wire   [11:0] tmp_4_fu_355_p1;
reg   [11:0] tmp_4_reg_469;
wire   [0:0] p_Val2_s_phi_fu_240_p4;
wire   [11:0] tmp_6_fu_369_p1;
reg   [11:0] tmp_6_reg_484;
wire   [11:0] tmp_8_fu_383_p1;
reg   [11:0] tmp_8_reg_489;
wire   [0:0] p_050_1_phi_fu_249_p4;
wire   [11:0] tmp_10_fu_397_p1;
reg   [11:0] tmp_10_reg_504;
wire    grp_aestest_fu_256_ap_start;
wire    grp_aestest_fu_256_ap_done;
wire    grp_aestest_fu_256_ap_idle;
wire    grp_aestest_fu_256_ap_ready;
reg    grp_aestest_fu_256_ap_ce;
wire   [0:0] grp_aestest_fu_256_inptext_V_address0;
wire    grp_aestest_fu_256_inptext_V_ce0;
wire   [127:0] grp_aestest_fu_256_inptext_V_q0;
wire   [127:0] grp_aestest_fu_256_key_V;
wire   [0:0] grp_aestest_fu_256_outtext_V_address1;
wire    grp_aestest_fu_256_outtext_V_ce1;
wire    grp_aestest_fu_256_outtext_V_we1;
wire   [127:0] grp_aestest_fu_256_outtext_V_d1;
reg   [31:0] i_reg_226;
reg   [0:0] p_Val2_s_reg_237;
reg   [0:0] p_050_1_reg_246;
reg    grp_aestest_fu_256_ap_start_ap_start_reg = 1'b0;
reg   [5:0] ap_NS_fsm;
wire   [0:0] exitcond_fu_344_p2;
wire   [31:0] tmp_s_fu_359_p4;
wire   [31:0] tmp_1_fu_373_p4;
wire   [31:0] tmp_2_fu_387_p4;
wire   [31:0] tmp_3_fu_401_p4;
reg    enable_o_preg = 1'b0;
reg    finished_preg = 1'b0;


aestest grp_aestest_fu_256(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_aestest_fu_256_ap_start ),
    .ap_done( grp_aestest_fu_256_ap_done ),
    .ap_idle( grp_aestest_fu_256_ap_idle ),
    .ap_ready( grp_aestest_fu_256_ap_ready ),
    .ap_ce( grp_aestest_fu_256_ap_ce ),
    .inptext_V_address0( grp_aestest_fu_256_inptext_V_address0 ),
    .inptext_V_ce0( grp_aestest_fu_256_inptext_V_ce0 ),
    .inptext_V_q0( grp_aestest_fu_256_inptext_V_q0 ),
    .key_V( grp_aestest_fu_256_key_V ),
    .outtext_V_address1( grp_aestest_fu_256_outtext_V_address1 ),
    .outtext_V_ce1( grp_aestest_fu_256_outtext_V_ce1 ),
    .outtext_V_we1( grp_aestest_fu_256_outtext_V_we1 ),
    .outtext_V_d1( grp_aestest_fu_256_outtext_V_d1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// finished_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_finished_preg
    if (ap_rst == 1'b1) begin
        finished_preg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(local_enable_reg_436 == ap_const_lv1_0) & ~(ap_const_lv1_0 == exitcond_fu_344_p2))) begin
            finished_preg <= ap_const_lv1_1;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(local_enable_read_fu_174_p2 == ap_const_lv1_0))) begin
            finished_preg <= ap_const_lv1_0;
        end
    end
end

/// grp_aestest_fu_256_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_aestest_fu_256_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_aestest_fu_256_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st12_fsm_11 == ap_CS_fsm) & (ap_ST_st13_fsm_12 == ap_NS_fsm))) begin
            grp_aestest_fu_256_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_aestest_fu_256_ap_ready)) begin
            grp_aestest_fu_256_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st40_fsm_39 == ap_CS_fsm))) begin
        i_reg_226 <= i_1_reg_464;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(local_enable_read_fu_174_p2 == ap_const_lv1_0))) begin
        i_reg_226 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(local_enable_reg_436 == ap_const_lv1_0))) begin
        i_1_reg_464 <= i_1_fu_349_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        local_enable_reg_436 <= local_enable_read_fu_174_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st33_fsm_32 == ap_CS_fsm) | ((ap_ST_st34_fsm_33 == ap_CS_fsm) & (ap_const_lv1_0 == p_050_1_phi_fu_249_p4)))) begin
        p_050_1_reg_246 <= write_finished_interrupt_V;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_st11_fsm_10 == ap_CS_fsm) & ~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) | ((ap_ST_st12_fsm_11 == ap_CS_fsm) & (ap_const_lv1_0 == p_Val2_s_phi_fu_240_p4)))) begin
        p_Val2_s_reg_237 <= read_finished_interrupt_V;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_st7_fsm_6 == ap_CS_fsm) & ~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0)) | (~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st17_fsm_16 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st24_fsm_23 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st39_fsm_38 == ap_CS_fsm)))) begin
        reg_316 <= {{AXI_DMA_SLAVE_datain[ap_const_lv32_1F : ap_const_lv32_D]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st39_fsm_38 == ap_CS_fsm))) begin
        tmp_10_reg_504 <= tmp_10_fu_397_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & ~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0))) begin
        tmp_4_reg_469 <= tmp_4_fu_355_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st17_fsm_16 == ap_CS_fsm))) begin
        tmp_6_reg_484 <= tmp_6_fu_369_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st24_fsm_23 == ap_CS_fsm))) begin
        tmp_8_reg_489 <= tmp_8_fu_383_p1;
    end
end

/// AXI_DMA_SLAVE_address assign process. ///
always @ (ap_CS_fsm or AXI_DMA_SLAVE_req_full_n or local_enable_reg_436 or AXI_DMA_SLAVE_addr_reg_440 or AXI_DMA_SLAVE_addr_1_reg_445 or AXI_DMA_SLAVE_addr_2_reg_450 or AXI_DMA_SLAVE_addr_3_reg_455 or p_Val2_s_phi_fu_240_p4 or p_050_1_phi_fu_249_p4 or exitcond_fu_344_p2)
begin
    if (((~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st18_fsm_17 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st40_fsm_39 == ap_CS_fsm)) | ((ap_ST_st12_fsm_11 == ap_CS_fsm) & ~(ap_const_lv1_0 == p_Val2_s_phi_fu_240_p4)) | ((ap_ST_st34_fsm_33 == ap_CS_fsm) & ~(ap_const_lv1_0 == p_050_1_phi_fu_249_p4)))) begin
        AXI_DMA_SLAVE_address = AXI_DMA_SLAVE_addr_3_reg_455;
    end else if ((((ap_ST_st11_fsm_10 == ap_CS_fsm) & ~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st28_fsm_27 == ap_CS_fsm)))) begin
        AXI_DMA_SLAVE_address = AXI_DMA_SLAVE_addr_2_reg_450;
    end else if (((~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st27_fsm_26 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st10_fsm_9 == ap_CS_fsm)))) begin
        AXI_DMA_SLAVE_address = AXI_DMA_SLAVE_addr_1_reg_445;
    end else if (((~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st26_fsm_25 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st9_fsm_8 == ap_CS_fsm)))) begin
        AXI_DMA_SLAVE_address = AXI_DMA_SLAVE_addr_reg_440;
    end else if (((ap_ST_st19_fsm_18 == ap_CS_fsm) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st25_fsm_24 == ap_CS_fsm)) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(local_enable_reg_436 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond_fu_344_p2)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st8_fsm_7 == ap_CS_fsm)))) begin
        AXI_DMA_SLAVE_address = ap_const_lv32_0;
    end else begin
        AXI_DMA_SLAVE_address = 'bx;
    end
end

/// AXI_DMA_SLAVE_dataout assign process. ///
always @ (ap_CS_fsm or AXI_DMA_SLAVE_req_full_n or sourceAddress or destinationAddress or bram_input_address or bram_output_address or tmp_s_fu_359_p4 or tmp_1_fu_373_p4 or tmp_2_fu_387_p4 or tmp_3_fu_401_p4)
begin
    if ((~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st40_fsm_39 == ap_CS_fsm))) begin
        AXI_DMA_SLAVE_dataout = tmp_3_fu_401_p4;
    end else if ((~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st27_fsm_26 == ap_CS_fsm))) begin
        AXI_DMA_SLAVE_dataout = destinationAddress;
    end else if ((~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st26_fsm_25 == ap_CS_fsm))) begin
        AXI_DMA_SLAVE_dataout = bram_output_address;
    end else if ((~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st25_fsm_24 == ap_CS_fsm))) begin
        AXI_DMA_SLAVE_dataout = tmp_2_fu_387_p4;
    end else if ((~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st18_fsm_17 == ap_CS_fsm))) begin
        AXI_DMA_SLAVE_dataout = tmp_1_fu_373_p4;
    end else if ((((ap_ST_st11_fsm_10 == ap_CS_fsm) & ~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st28_fsm_27 == ap_CS_fsm)))) begin
        AXI_DMA_SLAVE_dataout = ap_const_lv32_10;
    end else if ((~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st10_fsm_9 == ap_CS_fsm))) begin
        AXI_DMA_SLAVE_dataout = bram_input_address;
    end else if ((~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        AXI_DMA_SLAVE_dataout = sourceAddress;
    end else if ((~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st8_fsm_7 == ap_CS_fsm))) begin
        AXI_DMA_SLAVE_dataout = tmp_s_fu_359_p4;
    end else begin
        AXI_DMA_SLAVE_dataout = 'bx;
    end
end

/// AXI_DMA_SLAVE_req_din assign process. ///
always @ (ap_CS_fsm or AXI_DMA_SLAVE_req_full_n or local_enable_reg_436 or p_Val2_s_phi_fu_240_p4 or p_050_1_phi_fu_249_p4 or exitcond_fu_344_p2)
begin
    if ((((ap_ST_st11_fsm_10 == ap_CS_fsm) & ~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st18_fsm_17 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st25_fsm_24 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st26_fsm_25 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st27_fsm_26 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st28_fsm_27 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st40_fsm_39 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st8_fsm_7 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st9_fsm_8 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st10_fsm_9 == ap_CS_fsm)))) begin
        AXI_DMA_SLAVE_req_din = ap_const_logic_1;
    end else if (((ap_ST_st19_fsm_18 == ap_CS_fsm) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(local_enable_reg_436 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond_fu_344_p2)) | ((ap_ST_st12_fsm_11 == ap_CS_fsm) & ~(ap_const_lv1_0 == p_Val2_s_phi_fu_240_p4)) | ((ap_ST_st34_fsm_33 == ap_CS_fsm) & ~(ap_const_lv1_0 == p_050_1_phi_fu_249_p4)))) begin
        AXI_DMA_SLAVE_req_din = ap_const_logic_0;
    end else begin
        AXI_DMA_SLAVE_req_din = ap_const_logic_0;
    end
end

/// AXI_DMA_SLAVE_req_write assign process. ///
always @ (ap_CS_fsm or AXI_DMA_SLAVE_req_full_n or local_enable_reg_436 or p_Val2_s_phi_fu_240_p4 or p_050_1_phi_fu_249_p4 or exitcond_fu_344_p2)
begin
    if ((((ap_ST_st11_fsm_10 == ap_CS_fsm) & ~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st18_fsm_17 == ap_CS_fsm)) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st25_fsm_24 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st26_fsm_25 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st27_fsm_26 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st28_fsm_27 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st40_fsm_39 == ap_CS_fsm)) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(local_enable_reg_436 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond_fu_344_p2)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st8_fsm_7 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st9_fsm_8 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st10_fsm_9 == ap_CS_fsm)) | ((ap_ST_st12_fsm_11 == ap_CS_fsm) & ~(ap_const_lv1_0 == p_Val2_s_phi_fu_240_p4)) | ((ap_ST_st34_fsm_33 == ap_CS_fsm) & ~(ap_const_lv1_0 == p_050_1_phi_fu_249_p4)))) begin
        AXI_DMA_SLAVE_req_write = ap_const_logic_1;
    end else begin
        AXI_DMA_SLAVE_req_write = ap_const_logic_0;
    end
end

/// AXI_DMA_SLAVE_rsp_read assign process. ///
always @ (ap_CS_fsm or AXI_DMA_SLAVE_rsp_empty_n)
begin
    if ((((ap_ST_st7_fsm_6 == ap_CS_fsm) & ~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0)) | (~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st17_fsm_16 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st24_fsm_23 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st39_fsm_38 == ap_CS_fsm)))) begin
        AXI_DMA_SLAVE_rsp_read = ap_const_logic_1;
    end else begin
        AXI_DMA_SLAVE_rsp_read = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm or local_enable_reg_436 or exitcond_fu_344_p2)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ((local_enable_reg_436 == ap_const_lv1_0) | ~(ap_const_lv1_0 == exitcond_fu_344_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or local_enable_reg_436 or exitcond_fu_344_p2)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ((local_enable_reg_436 == ap_const_lv1_0) | ~(ap_const_lv1_0 == exitcond_fu_344_p2)))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// enable_o assign process. ///
always @ (ap_start or ap_CS_fsm or local_enable_read_fu_174_p2 or enable_o_preg)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(local_enable_read_fu_174_p2 == ap_const_lv1_0))) begin
        enable_o = ap_const_lv1_0;
    end else begin
        enable_o = enable_o_preg;
    end
end

/// finished assign process. ///
always @ (ap_start or ap_CS_fsm or local_enable_read_fu_174_p2 or local_enable_reg_436 or exitcond_fu_344_p2 or finished_preg)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(local_enable_reg_436 == ap_const_lv1_0) & ~(ap_const_lv1_0 == exitcond_fu_344_p2))) begin
        finished = ap_const_lv1_1;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(local_enable_read_fu_174_p2 == ap_const_lv1_0))) begin
        finished = ap_const_lv1_0;
    end else begin
        finished = finished_preg;
    end
end

/// grp_aestest_fu_256_ap_ce assign process. ///
always @ (ap_CS_fsm or AXI_DMA_SLAVE_req_full_n or AXI_DMA_SLAVE_rsp_empty_n)
begin
    if (((~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st17_fsm_16 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st24_fsm_23 == ap_CS_fsm)) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st18_fsm_17 == ap_CS_fsm)) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm) | (ap_ST_st22_fsm_21 == ap_CS_fsm) | (ap_ST_st23_fsm_22 == ap_CS_fsm) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st25_fsm_24 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st26_fsm_25 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st27_fsm_26 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st28_fsm_27 == ap_CS_fsm)) | (ap_ST_st29_fsm_28 == ap_CS_fsm) | (ap_ST_st30_fsm_29 == ap_CS_fsm) | (ap_ST_st31_fsm_30 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm))) begin
        grp_aestest_fu_256_ap_ce = ap_const_logic_1;
    end else begin
        grp_aestest_fu_256_ap_ce = ap_const_logic_0;
    end
end

/// s_data_in_V_ce0 assign process. ///
always @ (ap_CS_fsm or AXI_DMA_SLAVE_req_full_n or AXI_DMA_SLAVE_rsp_empty_n or grp_aestest_fu_256_inptext_V_ce0)
begin
    if (((~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st17_fsm_16 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st24_fsm_23 == ap_CS_fsm)) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st18_fsm_17 == ap_CS_fsm)) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm) | (ap_ST_st22_fsm_21 == ap_CS_fsm) | (ap_ST_st23_fsm_22 == ap_CS_fsm) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st25_fsm_24 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st26_fsm_25 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st27_fsm_26 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st28_fsm_27 == ap_CS_fsm)) | (ap_ST_st29_fsm_28 == ap_CS_fsm) | (ap_ST_st30_fsm_29 == ap_CS_fsm) | (ap_ST_st31_fsm_30 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm))) begin
        s_data_in_V_ce0 = grp_aestest_fu_256_inptext_V_ce0;
    end else begin
        s_data_in_V_ce0 = ap_const_logic_0;
    end
end

/// s_encrypted_out_V_ce1 assign process. ///
always @ (ap_CS_fsm or AXI_DMA_SLAVE_req_full_n or AXI_DMA_SLAVE_rsp_empty_n or grp_aestest_fu_256_outtext_V_ce1)
begin
    if (((~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st17_fsm_16 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st24_fsm_23 == ap_CS_fsm)) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st18_fsm_17 == ap_CS_fsm)) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm) | (ap_ST_st22_fsm_21 == ap_CS_fsm) | (ap_ST_st23_fsm_22 == ap_CS_fsm) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st25_fsm_24 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st26_fsm_25 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st27_fsm_26 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st28_fsm_27 == ap_CS_fsm)) | (ap_ST_st29_fsm_28 == ap_CS_fsm) | (ap_ST_st30_fsm_29 == ap_CS_fsm) | (ap_ST_st31_fsm_30 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm))) begin
        s_encrypted_out_V_ce1 = grp_aestest_fu_256_outtext_V_ce1;
    end else begin
        s_encrypted_out_V_ce1 = ap_const_logic_0;
    end
end

/// s_encrypted_out_V_we1 assign process. ///
always @ (ap_CS_fsm or AXI_DMA_SLAVE_req_full_n or AXI_DMA_SLAVE_rsp_empty_n or grp_aestest_fu_256_outtext_V_we1)
begin
    if (((~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st17_fsm_16 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0) & (ap_ST_st24_fsm_23 == ap_CS_fsm)) | (ap_ST_st33_fsm_32 == ap_CS_fsm) | (ap_ST_st13_fsm_12 == ap_CS_fsm) | (ap_ST_st14_fsm_13 == ap_CS_fsm) | (ap_ST_st15_fsm_14 == ap_CS_fsm) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st18_fsm_17 == ap_CS_fsm)) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm) | (ap_ST_st22_fsm_21 == ap_CS_fsm) | (ap_ST_st23_fsm_22 == ap_CS_fsm) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st25_fsm_24 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st26_fsm_25 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st27_fsm_26 == ap_CS_fsm)) | (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0) & (ap_ST_st28_fsm_27 == ap_CS_fsm)) | (ap_ST_st29_fsm_28 == ap_CS_fsm) | (ap_ST_st30_fsm_29 == ap_CS_fsm) | (ap_ST_st31_fsm_30 == ap_CS_fsm) | (ap_ST_st32_fsm_31 == ap_CS_fsm))) begin
        s_encrypted_out_V_we1 = grp_aestest_fu_256_outtext_V_we1;
    end else begin
        s_encrypted_out_V_we1 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or AXI_DMA_SLAVE_req_full_n or AXI_DMA_SLAVE_rsp_empty_n or local_enable_reg_436 or p_Val2_s_phi_fu_240_p4 or p_050_1_phi_fu_249_p4 or exitcond_fu_344_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if (((local_enable_reg_436 == ap_const_lv1_0) | ~(ap_const_lv1_0 == exitcond_fu_344_p2))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        ap_ST_st3_fsm_2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
        ap_ST_st4_fsm_3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
        ap_ST_st5_fsm_4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
        ap_ST_st6_fsm_5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st7_fsm_6 : 
            if (~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        ap_ST_st8_fsm_7 : 
            if (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        ap_ST_st9_fsm_8 : 
            if (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        ap_ST_st10_fsm_9 : 
            if (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        ap_ST_st11_fsm_10 : 
            if (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        ap_ST_st12_fsm_11 : 
            if ((ap_const_lv1_0 == p_Val2_s_phi_fu_240_p4)) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        ap_ST_st13_fsm_12 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
        ap_ST_st14_fsm_13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
        ap_ST_st15_fsm_14 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
        ap_ST_st16_fsm_15 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
        ap_ST_st17_fsm_16 : 
            if (~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end
        ap_ST_st18_fsm_17 : 
            if (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end else begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end
        ap_ST_st19_fsm_18 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
        ap_ST_st20_fsm_19 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
        ap_ST_st21_fsm_20 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
        ap_ST_st22_fsm_21 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
        ap_ST_st23_fsm_22 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
        ap_ST_st24_fsm_23 : 
            if (~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end
        ap_ST_st25_fsm_24 : 
            if (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end else begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end
        ap_ST_st26_fsm_25 : 
            if (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st27_fsm_26;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end
        ap_ST_st27_fsm_26 : 
            if (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st28_fsm_27;
            end else begin
                ap_NS_fsm = ap_ST_st27_fsm_26;
            end
        ap_ST_st28_fsm_27 : 
            if (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st29_fsm_28;
            end else begin
                ap_NS_fsm = ap_ST_st28_fsm_27;
            end
        ap_ST_st29_fsm_28 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
        ap_ST_st30_fsm_29 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
        ap_ST_st31_fsm_30 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
        ap_ST_st32_fsm_31 : 
            ap_NS_fsm = ap_ST_st33_fsm_32;
        ap_ST_st33_fsm_32 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
        ap_ST_st34_fsm_33 : 
            if ((ap_const_lv1_0 == p_050_1_phi_fu_249_p4)) begin
                ap_NS_fsm = ap_ST_st34_fsm_33;
            end else begin
                ap_NS_fsm = ap_ST_st35_fsm_34;
            end
        ap_ST_st35_fsm_34 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
        ap_ST_st36_fsm_35 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
        ap_ST_st37_fsm_36 : 
            ap_NS_fsm = ap_ST_st38_fsm_37;
        ap_ST_st38_fsm_37 : 
            ap_NS_fsm = ap_ST_st39_fsm_38;
        ap_ST_st39_fsm_38 : 
            if (~(AXI_DMA_SLAVE_rsp_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st40_fsm_39;
            end else begin
                ap_NS_fsm = ap_ST_st39_fsm_38;
            end
        ap_ST_st40_fsm_39 : 
            if (~(AXI_DMA_SLAVE_req_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st40_fsm_39;
            end
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign AXI_DMA_SLAVE_addr_1_fu_326_p2 = ap_const_lv64_8;
assign AXI_DMA_SLAVE_addr_2_fu_332_p2 = ap_const_lv64_A;
assign AXI_DMA_SLAVE_addr_3_fu_338_p2 = ap_const_lv64_1;
assign AXI_DMA_SLAVE_addr_fu_320_p2 = ap_const_lv64_6;
assign AXI_DMA_SLAVE_size = ap_const_lv32_1;
assign exitcond_fu_344_p2 = (i_reg_226 == length_r? 1'b1: 1'b0);
assign grp_aestest_fu_256_ap_start = grp_aestest_fu_256_ap_start_ap_start_reg;
assign grp_aestest_fu_256_inptext_V_q0 = s_data_in_V_q0;
assign grp_aestest_fu_256_key_V = key_in_V;
assign i_1_fu_349_p2 = (i_reg_226 + ap_const_lv32_1);
assign local_enable_read_fu_174_p2 = enable_i;
assign p_050_1_phi_fu_249_p4 = p_050_1_reg_246;
assign p_Val2_s_phi_fu_240_p4 = p_Val2_s_reg_237;
assign s_data_in_V_address0 = grp_aestest_fu_256_inptext_V_address0;
assign s_encrypted_out_V_address1 = grp_aestest_fu_256_outtext_V_address1;
assign s_encrypted_out_V_d1 = grp_aestest_fu_256_outtext_V_d1;
assign tmp_10_fu_397_p1 = AXI_DMA_SLAVE_datain[11:0];
assign tmp_1_fu_373_p4 = {{{reg_316}, {ap_const_lv1_1}}, {tmp_6_reg_484}};
assign tmp_2_fu_387_p4 = {{{reg_316}, {ap_const_lv1_1}}, {tmp_8_reg_489}};
assign tmp_3_fu_401_p4 = {{{reg_316}, {ap_const_lv1_1}}, {tmp_10_reg_504}};
assign tmp_4_fu_355_p1 = AXI_DMA_SLAVE_datain[11:0];
assign tmp_6_fu_369_p1 = AXI_DMA_SLAVE_datain[11:0];
assign tmp_8_fu_383_p1 = AXI_DMA_SLAVE_datain[11:0];
assign tmp_s_fu_359_p4 = {{{reg_316}, {ap_const_lv1_1}}, {tmp_4_reg_469}};
always @ (posedge ap_clk)
begin
    AXI_DMA_SLAVE_addr_reg_440[31:0] <= 32'b00000000000000000000000000000110;
    AXI_DMA_SLAVE_addr_1_reg_445[31:0] <= 32'b00000000000000000000000000001000;
    AXI_DMA_SLAVE_addr_2_reg_450[31:0] <= 32'b00000000000000000000000000001010;
    AXI_DMA_SLAVE_addr_3_reg_455[31:0] <= 32'b00000000000000000000000000000001;
    enable_o_preg <= 1'b0;
end



endmodule //aes

